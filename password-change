#!/usr/local/bin/bash
# Script to change the password on a all the switches and routes in the list "hosts-to-chage.db"
# The script expects the "hosts-to-change.db" file to be in the format: 
# hostanme:rancid_type:state:comment
# 
# Where:
#       hostname:       is a FQDN or IP address
#       type:           is one of vicso,vdx,vyos,foundry,alu,cisco-nx or juniper
#       state:          is either 'up' or 'down'
#       comment:        text string
#
# setup variables
DIR="/data/rancid/**/router.db"
#creates a dictionary, which maps vendor to *login file for rancid
declare -A d
#creates a dictionary, which maps vendor to the set of commands to change the password
declare -A dp
#Read the file, containing password, encrypted password for Juniper, enable password and #ssh key
while read -r password encrypted enable key;do
    p=$password
    enc=$encrypted
    e=$enable
    k=$key
done < "/data/rancid/.password-change"
#echo "passwd: ${e}"
#exit 1

#dictionary of login files
d=( \
 ["cisco"]="clogin"\
 ["vdx"]="vdxlogin"\
 ["vyos"]="vylogin"\
 ["foundry"]="flogin"\
 ["alu"]="alogin"\
 ["cisco-nx"]="clogin"\
 ["juniper"]="jlogin" )
#dictionary of commands to be executed
dp=( \
    ["cisco"]="service timestamps debug datetime localtime show-timezone;service timestamps log datetime localtime show-timezone;no ip http server;no ip http secure-server;no ip domain-lookup" )
dp1=( \
    ["brocadeVDX"]="username foo password \"${p}\";username admin password \"${p}\";username user password \"${p}\""\
    ["alu"]="configure system security password admin-password \"${p}\" hash2;configure system security user admin password \"${p}\" hash2;configure system security user net password \"${p}\" hash2" \
    ["vdx"]="username foo password \"${p}\"\rusername admin password \"${p}\"\rusername user password \"${p}\"" \
    ["cisco"]="username foo password ${p};username foo secret ${p};enable secret ${e};line vty 5 15;password ${p}" \
    ["cisco-nx"]="username admin password \"${p}\";username foo password \"${p}\""\
    ["foundry"]="username foo password \"${p}\"\renable super-user-password \"$e\""\
    ["juniper"]="configure;set system login user foo authentication encrypted-password \"$enc\""\
    ["timeser"]="set password ${p}"\
    ["vyos"]="configure;set system login user foo authentication plaintext-password \"${p}\"" )
#filepath where all *rancid and *login files are stored
DIR2="/usr/libexec/rancid"
IFS=";"
#aggreates all router.db files into one rancid.db
cat $DIR > $DIR1/rancid.db
#INPUT=$DIR1/rancid.db
#loop over all the devices and executes rancid commands
#-excludes vdx2 and vdx1 vendors (covered by vdx)
while read -r name vendor status note;do
    if [[ $status == "up" && $vendor != "vdx2" && $vendor != "vdx1" ]]
    then
        if [[ $vendor == "vyos" ]]
        then
            $DIR2/${d[$vendor]} -t 200 -c "${dp[$vendor]};commit;save;exit" $name
        elif [[ $vendor == "juniper" ]]
        then
                $DIR2/${d[$vendor]} -t 200 -c "${dp[$vendor]};commit;exit" $name
        elif [[ $vendor == "foundry" ]]
        then
            $DIR2/${d[$vendor]} -t 200 -c "configure terminal\r\n${dp[$vendor]}\r\nexit\r\nwrite mem\r\nexit\r\nexit\r\n" $name
        elif [[ $vendor == "cisco-nx" ]]
        then
                $DIR2/${d[$vendor]} -t 200 -c "configure terminal\r\n${dp[$vendor]}\r\nexit\r\ncopy running startup\r\nexit\r\nexit" $name
        else
            $DIR2/${d[$vendor]} -t 200 -c "configure terminal\r\n${dp[$vendor]}\r\nexit\r\nexit\r\nwrite mem\r\nexit" $name
        fi
    fi
done < "/data/rancid/hosts-to-change.db"
