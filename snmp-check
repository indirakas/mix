DIR='/home/indira/snmp-data'
community_string='blah'
hostname=foo.bar.com
INTNUMBER=65
OUT=$(snmpget -v2c -c $community_string $hostname ifOutOctets.$INTNUMBER | awk '{print $4}')
IN=$(snmpget -v2c -c $community_string $hostname ifInOctets.$INTNUMBER | awk '{print $4}')
SPEED=$(snmpget -v2c -c $community_string $hostname ifHighSpeed.$INTNUMBER | awk '{print $4}')
TIME=5
echo $OUT $IN $SPEED
#SPEED=$speed
PIPE=10000000

        if [ -z "$OUT" ] || [ -z "$IN" ]; then
                msg="Unable to retrieve SNMP info."
                state=CRITICAL
                echo $state $msg
                exit 2

        else
                #wait $TIME before running the same check, this way we can confirm how much the data has changed in two periods.
                sleep $TIME
                OUT2=$(snmpget -v2c -c $community_string $hostname ifOutOctets.$INTNUMBER | awk '{print $4}')
                IN2=$(snmpget -v2c -c $community_string $hostname ifInOctets.$INTNUMBER | awk '{print $4}')
                echo $OUT2 $IN2
                DELTAOUT=$(( $OUT2 - $OUT))
                DELTAIN=$(( $IN2 - $IN))
                #Value is in octets so will need to be divided by 8 to get bytes, this is then divided by 1024 to give kilobytes.
                INPUTBW=$(((($DELTAIN)/$TIME)*8/1024))
                OUTPUTBW=$(((($DELTAOUT)/$TIME)*8/1024))
                #For percentage usage we do 100/(total possible bandwidth â€“ current bandwidth).
                percentage_use=$(echo "scale=9; $PIPE/$INPUTBW" | bc)
                PRCNTIN=$(echo "scale=0; 100/$percentage_use" | bc)
                percentage_use=$(echo "scale=9; $PIPE/$OUTPUTBW" | bc)
                PRCNTOUT=$(echo "scale=0; 100/$percentage_use" | bc)
                #Bash hates decimals, so take the number and remove the decimal point and then compare this to speed (another none decimal).
                PRCNTIN_IF=$(echo $PRCNTIN | tr -d ".")
                PRCNTOUT_IF=$(echo $PRCNTOUT | tr -d ".")
                if [ "$PRCNTIN_IF" -gt $((($SPEED)*1000)) ] || [ "$PRCNTOUT_IF" -gt $((($SPEED)*1000)) ]; then
                        msg="Inbound: $INPUTBW"kbps" ($PRCNTIN% Used), Outbound: $OUTPUTBW"kbps" ($PRCNTOUT% Used)."
                        state=CRITICAL
                        echo $state $msg 
                        exit 2
                else
                        msg="Inbound: $INPUTBW"kbps" ($PRCNTIN% Used), Outbound: $OUTPUTBW"kbps" ($PRCNTOUT% Used)."
                        state=OK
                        echo $state $msg 
                        exit 0
                fi
        fi
